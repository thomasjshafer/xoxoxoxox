- if current_user.present?
  #ai-code-header
    %ul#ai-code-list
      %li.add-form-wrapper
        = link_to_void '+', :id => 'add-code-show'
        = link_to_void 'â€“', :id => 'add-code-hide', :style => 'display:none'

        - semantic_form_for AiImplementation.new, :url => user_ai_implementations_url(current_user), :html => {:style => 'display:none', :class => 'validate'} do |f|

          = f.inputs :name
          - f.buttons do
            = f.commit_button 'Save', :button_html => {:class => 'commit'}
      - current_user.ai_implementations.each do |ai|
        - ai_class = ai == @recent_ai ? 'selected ' : ''
        - ai_class << (ai.published? ? 'published' : 'unpublished')
        %li.load-ai-code{:'data-service-url' => user_ai_implementation_path(current_user, ai), :class => ai_class}
          .name= ai.name
          - form_for [current_user, ai], :html => {:class => 'publishing-form'} do |f|
            = f.hidden_field :published, :id => '', :class => 'publish-input'
            .publishing-actions
              = f.submit 'Publish', :class => 'publish', :style => (ai.published? ? 'display:none' : nil), :id => nil, :'data-publish' => 1
              = f.submit 'Unpublish', :class => 'unpublish', :style => (ai.published? ? nil : 'display:none'), :id => nil, :'data-publish' => 0


  #ai-code-content
    = text_area_tag :user_ai, @recent_ai.code, :autocomplete => 'off'

  #ai-code-footer
    = link_to_void 'Save Code', :id => 'save-code'
